    // FILE *file;
    // char *buf;
    // int fileLen;
    // printf("%s\n", filename);
    // file = fopen(filename, "rb");
    // if (file == NULL)
    // {
    //     printf("NULL");
    //     //send 4xx notfound
    //     close(newsockfd);  // close connection
    //     close(sockfd);
    //     return -1;
    // }

    // fseek(file, 0, SEEK_END);
    // fileLen=ftell(file);
    // fseek(file, 0, SEEK_SET);


    // buf = (char *) malloc(fileLen+1);
    // if (!buf) 
    // {
    //     fprintf(stderr, "Memory error");
    //     fclose(file);
    //     return -1;
    // }
    // fread(buf, fileLen, 1, file);
    // fclose(file);

    // //Contruct reply


    // char header[102400+fileLen];

    // sprintf(header, 
    // "HTTP/1.1 200 OK\n"//If this returns, it will always be 200
    // "Date: Thu, 19 Feb 2009 12:27:04 GMT\n"//time()
    // "Server: Apache/2.2.3\n"
    // "Last-Modified: Wed, 18 Jun 2003 16:05:58 GMT\n"
    // "ETag: \"56d-9989200-1132c580\"\n"
    // "Content-Type: %s\n"
    // "Content-Length: %i\n"
    // "Accept-Ranges: bytes\n"
    // "Connection: close\n"
    //     "\n", type, fileLen);

    // printf("reply");
    // char *reply = (char*)malloc(strlen(header)+fileLen);
    // strcpy(reply, header);
    // memcpy(reply+strlen(header), buf, fileLen);
    // send(newsockfd, reply, strlen(header)+fileLen, 0);

    // close(newsockfd);  // close connection
    // close(sockfd);

    // return 0;