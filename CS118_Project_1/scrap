    // FILE* resp = fopen(file, "r");
    // int fd = fileno(resp);

    // char file_buff[sizeof(file)/sizeof(char)+1];

    // read(fd, file_buff, sizeof(file)/sizeof(char));

    // printf("%s\n", file_buff);
    //reply to client
    int fileLen;
    FILE* resp = fopen(file, "r");
    //Get file length
    fseek(resp, 0, SEEK_END);
    fileLen=ftell(resp);
    fseek(resp, 0, SEEK_SET);
    printf("After seek");
    //Allocate memory
    char *buf;
    buf=(char *)malloc(fileLen+1);
    if (!buf)    
    {
        fprintf(stderr, "Memory error!");
        fclose(resp);
        return -1;
    }
    printf("malloc");
    fread(buf, fileLen, 1, resp);
    fclose(resp);

    char header[102400];

    sprintf(header, 
    "HTTP/1.1 200 OK\n"//If this returns, it will always be 200
    "Date: Thu, 19 Feb 2009 12:27:04 GMT\n"//time()
    "Server: Apache/2.2.3\n"
    "Last-Modified: Wed, 18 Jun 2003 16:05:58 GMT\n"
    "ETag: \"56d-9989200-1132c580\"\n"
    "Content-Type: image/jpeg\n"
    "Content-Length: %i\n"
    "Accept-Ranges: bytes\n"
    "Connection: close\n"
        "\n", fileLen);

    printf("reply");
    char *reply = (char*)malloc(strlen(header)+fileLen);
    strcpy(reply, header);
    memcpy(reply+strlen(header), buf, fileLen);
    send(newsockfd, reply, strlen(header)+fileLen, 0);
    printf("send");